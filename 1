This step may take considerable amount of time, please wait..
Done.
Configuring client side components
This program will set up IPA client.
Version 4.11.3

Using existing certificate '/etc/ipa/ca.crt'.
Client hostname: freeipa.seaproject-test.ru
Realm: SEAPROJECT-TEST.RU
DNS Domain: seaproject-test.ru
IPA Server: freeipa.seaproject-test.ru
BaseDN: dc=seaproject-test,dc=ru

Configured /etc/sssd/sssd.conf
cannot connect to 'https://freeipa.seaproject-test.ru/ipa/json': [SSL] record layer failure (_ssl.c:992)
The ipa-client-install command failed. See /var/log/ipaclient-install.log for more information
Configuration of client side components failed!
The ipa-server-install command failed. See /var/log/ipaserver-install.log for more information
Неудача. См. /var/log/astra-freeipa-server.log
root@freeipa:~# ping freeipa.seaproject-test.ru
curl -v https://freeipa.seaproject-test.ru/ipa/json
PING freeipa.seaproject-test.ru (10.0.2.30) 56(84) bytes of data.
64 bytes from freeipa.seaproject-test.ru (10.0.2.30): icmp_seq=1 ttl=64 time=0.057 ms
64 bytes from freeipa.seaproject-test.ru (10.0.2.30): icmp_seq=2 ttl=64 time=0.045 ms
64 bytes from freeipa.seaproject-test.ru (10.0.2.30): icmp_seq=3 ttl=64 time=0.052 ms
64 bytes from freeipa.seaproject-test.ru (10.0.2.30): icmp_seq=4 ttl=64 time=0.055 ms
^C
--- freeipa.seaproject-test.ru ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3058ms
rtt min/avg/max/mdev = 0.045/0.052/0.057/0.004 ms
*   Trying 10.0.2.30:443...
* Connected to freeipa.seaproject-test.ru (10.0.2.30) port 443 (#0)
* ALPN: offers h2,http/1.1
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
*  CAfile: /etc/ssl/certs/ca-certificates.crt
*  CApath: /etc/ssl/certs
* TLSv1.3 (OUT), TLS alert, record overflow (534):
* OpenSSL/3.4.0: error:0A0000C6:SSL routines::packet length too long
* Closing connection 0
curl: (35) OpenSSL/3.4.0: error:0A0000C6:SSL routines::packet length too long


root@freeipa:~# apache2ctl -S
VirtualHost configuration:
*:80                   freeipa.seaproject-test.ru (/etc/apache2/sites-enabled/000-default.conf:1)
ServerRoot: "/etc/apache2"
Main DocumentRoot: "/var/www/html"
Main ErrorLog: "/var/log/apache2/error.log"
Mutex ssl-stapling: using_defaults
Mutex proxy: using_defaults
Mutex ssl-cache: using_defaults
Mutex default: dir="/var/run/apache2/" mechanism=default
Mutex mpm-accept: using_defaults
Mutex watchdog-callback: using_defaults
Mutex rewrite-map: using_defaults
Mutex ssl-stapling-refresh: using_defaults
PidFile: "/var/run/apache2/apache2.pid"
Define: DUMP_VHOSTS
Define: DUMP_RUN_CFG
User: name="www-data" id=33
Group: name="www-data" id=33


<VirtualHost *:443>
    ServerName freeipa.seaproject-test.ru

    SSLEngine on
    SSLCertificateFile /var/lib/ipa/certs/httpd.pem
    SSLCertificateKeyFile /var/lib/ipa/private/httpd.key
    SSLCertificateChainFile /var/lib/ipa/certs/ca.crt

    DocumentRoot /var/www/html

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    <Directory /var/www/html>
        Options FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
</VirtualHost>



root@freeipa:~# nano /etc/apache2/sites-available/
000-default.conf  default-ssl.conf
root@freeipa:~# nano /etc/apache2/sites-available/freeipa-ssl.conf
root@freeipa:~# cat /var/lib/ipa/
backup/     certs/      dnssec/     gssproxy/   passwds/    pki-ca/     private/    sysrestore/ sysupgrade/
root@freeipa:~# cat /var/lib/ipa/certs/
cacert.pem  httpd.crt   kdc.crt     kdc.key
root@freeipa:~# cat /var/lib/ipa/certs/^C
root@freeipa:~# a2en
a2enconf  a2enmod   a2ensite
root@freeipa:~# a2ensite freeipa-ssl.conf
Enabling site freeipa-ssl.
To activate the new configuration, you need to run:
  systemctl reload apache2
root@freeipa:~# systemctl reload apache2
Job for apache2.service failed.
See "systemctl status apache2.service" and "journalctl -xeu apache2.service" for details.
root@freeipa:~# apache2ctl -S
VirtualHost configuration:
*:80                   freeipa.seaproject-test.ru (/etc/apache2/sites-enabled/000-default.conf:1)
*:443                  freeipa.seaproject-test.ru (/etc/apache2/sites-enabled/freeipa-ssl.conf:1)
ServerRoot: "/etc/apache2"
Main DocumentRoot: "/var/www/html"
Main ErrorLog: "/var/log/apache2/error.log"
Mutex ssl-stapling: using_defaults
Mutex proxy: using_defaults
Mutex ssl-cache: using_defaults
Mutex default: dir="/var/run/apache2/" mechanism=default
Mutex mpm-accept: using_defaults
Mutex watchdog-callback: using_defaults
Mutex rewrite-map: using_defaults
Mutex ssl-stapling-refresh: using_defaults
PidFile: "/var/run/apache2/apache2.pid"
Define: DUMP_VHOSTS
Define: DUMP_RUN_CFG
User: name="www-data" id=33
Group: name="www-data" id=33
root@freeipa:~# cat /etc/apache2/sites-available/
000-default.conf  default-ssl.conf  freeipa-ssl.conf
root@freeipa:~# cat /etc/apache2/sites-available/000-default.conf
<VirtualHost *:80>
    ServerName freeipa.seaproject-test.ru
    DocumentRoot /var/www/html
</VirtualHost>
root@freeipa:~#


Done configuring certificate server (pki-tomcatd).
Configuring directory server (dirsrv)
  [1/3]: configuring TLS for DS instance
  [error] CalledProcessError: CalledProcessError(Command ['/usr/bin/certutil', '-d', 'sql:/etc/dirsrv/slapd-SEAPROJECT-TEST-RU/', '-A', '-n', 'SEAPROJECT-TEST.RU IPA CA', '-t', 'CT,C,C', '-a', '-f', '/etc/dirsrv/slapd-SEAPROJECT-TEST-RU/pwdfile.txt'] returned non-zero exit status 255: 'certutil: could not decode certificate: SEC_ERROR_REUSED_ISSUER_AND_SERIAL: You are attempting to import a cert with the same issuer/serial as an existing cert, but that is not the same cert.\n')
CalledProcessError(Command ['/usr/bin/certutil', '-d', 'sql:/etc/dirsrv/slapd-SEAPROJECT-TEST-RU/', '-A', '-n', 'SEAPROJECT-TEST.RU IPA CA', '-t', 'CT,C,C', '-a', '-f', '/etc/dirsrv/slapd-SEAPROJECT-TEST-RU/pwdfile.txt'] returned non-zero exit status 255: 'certutil: could not decode certificate: SEC_ERROR_REUSED_ISSUER_AND_SERIAL: You are attempting to import a cert with the same issuer/serial as an existing cert, but that is not the same cert.\n')
The ipa-server-install command failed. See /var/log/ipaserver-install.log for more information


systemctl stop dirsrv.target
systemctl stop pki-tomcatd@pki-tomcat.service
systemctl stop httpd

rm -rf /etc/ipa/
rm -rf /var/lib/ipa/
rm -rf /etc/pki/pki-tomcat/
rm -rf /etc/dirsrv/
rm -rf /var/lib/dirsrv/
rm -rf /var/log/pki/
rm -rf /var/log/dirsrv/
rm -rf /var/log/ipa*
rm -rf /etc/sysconfig/pki/
rm -rf /etc/systemd/system/pki*

# Удалим старую NSS-базу, если осталась:
find /etc -name "cert8.db" -o -name "cert9.db" -o -name "key3.db" -o -name "key4.db" | xargs rm -f

  File "/usr/lib/python3/dist-packages/ipapython/install/util.py", line 81, in run_generator_with_yield_from
    six.reraise(*exc_info)
  File "/usr/lib/python3/dist-packages/six.py", line 719, in reraise
    raise value
  File "/usr/lib/python3/dist-packages/ipapython/install/util.py", line 59, in run_generator_with_yield_from
    value = gen.send(prev_value)
            ^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/ipapython/install/common.py", line 65, in _install
    for unused in self._installer(self.parent):
  File "/usr/lib/python3/dist-packages/ipaserver/install/server/__init__.py", line 564, in main
    master_install_check(self)
  File "/usr/lib/python3/dist-packages/ipaserver/install/server/install.py", line 278, in decorated
    func(installer)
  File "/usr/lib/python3/dist-packages/ipaserver/install/server/install.py", line 681, in install_check
    ipaconf.newConf(target_fname, opts)
  File "/usr/lib/python3/dist-packages/ipapython/ipachangeconf.py", line 547, in newConf
    f = openLocked(file, file_perms)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/ipapython/ipachangeconf.py", line 46, in openLocked
    raise IOError(e.errno, e.strerror)

2025-05-30T09:29:47Z DEBUG The ipa-server-install command failed, exception: FileNotFoundError: [Errno 2] No such file or directory
2025-05-30T09:29:47Z ERROR [Errno 2] No such file or directory
2025-05-30T09:29:47Z ERROR The ipa-server-install command failed. See /var/log/ipaserver-install.log for more information
root@freeipa:~#


mkdir -p ~/orangepi-test
cp /mnt/boot/Image ~/orangepi-test/
cp /mnt/boot/uInitrd ~/orangepi-test/
cp /mnt/boot/dtb-5.10.160-rockchip-rk356x/rockchip/rk3588s-orangepi-5.dtb ~/orangepi-test/

sudo qemu-system-aarch64 \
  -M virt \
  -cpu cortex-a72 \
  -m 2048 \
  -kernel ~/orangepi-test/Image \
  -initrd ~/orangepi-test/uInitrd \
  -dtb ~/orangepi-test/rk3588s-orangepi-5.dtb \
  -append "console=ttyAMA0 root=/dev/vda3 rw rootwait" \
  -drive file=/dev/sdb,format=raw,if=virtio \
  -nographic

root@sp-nb-poke05:~# cat /mnt/sda/orangepiEnv.txt
verbosity=1
bootlogo=false
extraargs=cma=128M
overlay_prefix=rk356x
rootdev=UUID=56bd0f9e-e547-4742-84b2-185d4a19d516
rootfstype=ext4
root@sp-nb-poke05:~# cat /mnt/sda/boot.cmd
# DO NOT EDIT THIS FILE
#
# Please edit /boot/orangepiEnv.txt to set supported parameters
#

setenv load_addr "0x9000000"
setenv overlay_error "false"
# default values
setenv rootdev "/dev/mmcblk0p1"
setenv verbosity "1"
setenv console "both"
setenv bootlogo "false"
setenv rootfstype "ext4"
setenv docker_optimizations "on"
setenv earlycon "off"

echo "Boot script loaded from ${devtype} ${devnum}"

if test -e ${devtype} ${devnum} ${prefix}orangepiEnv.txt; then
load ${devtype} ${devnum} ${load_addr} ${prefix}orangepiEnv.txt
env import -t ${load_addr} ${filesize}
fi

if test "${logo}" = "disabled"; then setenv logo "logo.nologo"; fi

if test "${console}" = "display" || test "${console}" = "both"; then setenv consoleargs "console=tty1"; fi
if test "${console}" = "serial" || test "${console}" = "both"; then setenv consoleargs "console=ttyS2,1500000 ${consoleargs}"; fi
if test "${earlycon}" = "on"; then setenv consoleargs "earlycon ${consoleargs}"; fi
if test "${bootlogo}" = "true"; then
setenv consoleargs "splash plymouth.ignore-serial-consoles ${consoleargs}"
else
setenv consoleargs "splash=verbose ${consoleargs}"
fi

# get PARTUUID of first partition on SD/eMMC the boot script was loaded from
if test "${devtype}" = "mmc"; then part uuid mmc ${devnum}:1 partuuid; fi

setenv bootargs "root=${rootdev} rootwait rootfstype=${rootfstype} ${consoleargs} consoleblank=0 loglevel=${verbosity} ubootpart=${partuuid} usb-storage.quirks=${usbstoragequirks} ${extraargs} ${extraboardargs}"

if test "${docker_optimizations}" = "on"; then setenv bootargs "${bootargs} cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1"; fi

load ${devtype} ${devnum} ${ramdisk_addr_r} ${prefix}uInitrd
load ${devtype} ${devnum} ${kernel_addr_r} ${prefix}Image

load ${devtype} ${devnum} ${fdt_addr_r} ${prefix}dtb/${fdtfile}
fdt addr ${fdt_addr_r}
fdt resize 65536

for overlay_file in ${overlays}; do
if load ${devtype} ${devnum} ${load_addr} ${prefix}dtb/rockchip/overlay/${overlay_prefix}-${overlay_file}.dtbo; then
echo "Applying kernel provided DT overlay ${overlay_prefix}-${overlay_file}.dtbo"
fdt apply ${load_addr} || setenv overlay_error "true"
fi
done

for overlay_file in ${user_overlays}; do
if load ${devtype} ${devnum} ${load_addr} ${prefix}overlay-user/${overlay_file}.dtbo; then
echo "Applying user provided DT overlay ${overlay_file}.dtbo"
fdt apply ${load_addr} || setenv overlay_error "true"
fi
done
if test "${overlay_error}" = "true"; then
echo "Error applying DT overlays, restoring original DT"
load ${devtype} ${devnum} ${fdt_addr_r} ${prefix}dtb/${fdtfile}
else
if load ${devtype} ${devnum} ${load_addr} ${prefix}dtb/rockchip/overlay/${overlay_prefix}-fixup.scr; then
echo "Applying kernel provided DT fixup script (${overlay_prefix}-fixup.scr)"
source ${load_addr}
fi
if test -e ${devtype} ${devnum} ${prefix}fixup.scr; then
load ${devtype} ${devnum} ${load_addr} ${prefix}fixup.scr
echo "Applying user provided fixup script (fixup.scr)"
source ${load_addr}
fi
fi

if test "${ethernet_phy}" = "rtl8211f"; then
fdt set /ethernet@ff540000 tx_delay <0x24>
fdt set /ethernet@ff540000 rx_delay <0x18>
fi

booti ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}

# Recompile with:
# mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr




