stages:
  - build
  - publish

variables:
  PACKAGE_NAME: system-monitor
  VERSION: "1.0"
  ARCH: all
  BUILD_DIR: build/${PACKAGE_NAME}
  OUTPUT_DIR: build/output
  DEB_FILE: ${OUTPUT_DIR}/${PACKAGE_NAME}_${VERSION}_${ARCH}.deb

build_deb:
  stage: build
  image: ubuntu:focal
  script:
    - apt update && apt install -y dpkg-dev
    - mkdir -p ${BUILD_DIR}/DEBIAN
    - cp -r zephyr_monitor/* ${BUILD_DIR}/
    - chmod +x ${BUILD_DIR}/usr/local/bin/system-monitor.sh
    - |
      cat > ${BUILD_DIR}/DEBIAN/control <<EOF
      Package: ${PACKAGE_NAME}
      Version: ${VERSION}
      Section: base
      Priority: optional
      Architecture: ${ARCH}
      Maintainer: You <dromashko@seaproject.ru>
      Description: System Monitor service
      EOF
    - mkdir -p ${OUTPUT_DIR}
    - dpkg-deb --build ${BUILD_DIR} ${DEB_FILE}
  artifacts:
    paths:
      - ${OUTPUT_DIR}/
    expire_in: 1 week

upload_package:
  stage: publish
  image: curlimages/curl:latest
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
      if [ ! -d "${OUTPUT_DIR}" ]; then
        echo "‚ùå Error: Build directory ${OUTPUT_DIR} not found!"
        exit 1
      fi

      # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–º–º–∏—Ç–∞
      PKG_VERSION="${VERSION}-${CI_COMMIT_SHORT_SHA}"
      
      echo "üì¶ Uploading packages to GitLab Generic Registry..."
      echo "‚Ñπ Version: ${PKG_VERSION}"
      echo "‚Ñπ Files:"
      ls -lh ${OUTPUT_DIR}/

      for file in ${OUTPUT_DIR}/*.deb; do
        if [ -f "$file" ]; then
          filename=$(basename "$file")
          echo "‚¨Ü Uploading: ${filename}"
          
          if ! curl --fail --silent --show-error \
               --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
               --upload-file "$file" \
               "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${PKG_VERSION}/${filename}"; then
            echo "‚ùå Failed to upload ${filename}"
            echo "‚Ñπ Troubleshooting:"
            echo "1. Check CI_JOB_TOKEN scope"
            echo "2. Verify Packages are enabled in project settings"
            exit 1
          fi
          
          echo "‚úÖ Successfully uploaded: ${filename}"
          echo "üåê URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${PKG_VERSION}/${filename}"
        fi
      done
  needs: ["build_deb"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'